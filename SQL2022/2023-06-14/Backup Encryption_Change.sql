
USE [master];
BEGIN TRY
	DECLARE @sid varbinary(85);
	SELECT @sid = sid FROM sys.syslogins WHERE name = 'AIDBA'
	IF @sid IS NULL
	BEGIN
		CREATE LOGIN [AIDBA] WITH PASSWORD=N'Pa$$w0rd', DEFAULT_DATABASE=[tempdb], 
		CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF;
		PRINT 'LOGIN [AIDBA] IS CREATED.';
		IF EXISTS ( SELECT * FROM sys.sysusers WHERE name = 'AIDBA')	
		BEGIN
			ALTER USER [AIDBA] WITH LOGIN = [AIDBA];
			PRINT 'USER [AIDBA] IS MAPPED TO LOGIN [AIDBA].';
		END
		ELSE
		BEGIN
			CREATE USER [AIDBA] FOR LOGIN [AIDBA];
			PRINT 'USER [AIDBA] IS CREATED.';
		END
	END;
	ELSE 
	BEGIN
		PRINT 'LOGIN [AIDBA] ALREADY EXISTS.';
		IF NOT EXISTS ( SELECT * FROM sys.sysusers WHERE name = 'AIDBA')
		BEGIN
			CREATE USER [AIDBA] FOR LOGIN [AIDBA];
			PRINT 'USER [AIDBA] IS CREATED.';
		END
		ELSE
		BEGIN
			IF NOT EXISTS ( SELECT * FROM sys.sysusers WHERE name = 'AIDBA' AND sid = @sid)
			BEGIN
				ALTER USER [AIDBA] WITH LOGIN = [AIDBA];
				PRINT 'USER [AIDBA] IS MAPPED TO LOGIN [AIDBA].';
			END
			ELSE
			BEGIN
				PRINT 'USER [AIDBA] ALREADY EXISTS.';
			END
		END
	END	
	ALTER SERVER ROLE  [sysadmin]  ADD MEMBER [AIDBA];
	IF NOT EXISTS (SELECT * FROM sys.symmetric_keys WHERE symmetric_key_id = 101)
	BEGIN
		CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Pa$$w0rd';
		ALTER MASTER KEY ADD ENCRYPTION BY SERVICE MASTER KEY;
		PRINT 'MASTER KEY IS CREATED.'
	END;
	ELSE
	BEGIN
		BEGIN TRY
			ALTER MASTER KEY ADD ENCRYPTION BY SERVICE MASTER KEY;
			PRINT 'MASTER KEY ALREADY EXISTS.';
		END TRY
		BEGIN CATCH
			PRINT 'MASTER KEY CANNOT BE ENCRYPTED BY SERVICE MASTER KEY.';
		END CATCH
	END
	IF NOT EXISTS (SELECT * FROM sys.certificates WHERE name = 'AIDBA_Encryption')
	BEGIN
		DECLARE @CertDate datetime
		SELECT @CertDate = DATEADD(YY,5,GETDATE())
		DECLARE @STMT nvarchar(max);
		SET @STMT =
		'CREATE CERTIFICATE [AIDBA_Encryption] AUTHORIZATION [AIDBA]    
		WITH SUBJECT = ''Encryption Certificate''
		, EXPIRY_DATE = '''+CAST(@CertDate AS nvarchar(50))+''' ;
		'
		EXEC (@STMT);
		PRINT 'CERTIFICATE IS CREATED.';
	END
	ELSE
	BEGIN
		PRINT 'CERTIFICATE ALREADY EXISTS.'
	END
END TRY
BEGIN CATCH
	PRINT 'CERTIFICATE CAN NOT BE CREATED! '+ERROR_MESSAGE();
END CATCH;
